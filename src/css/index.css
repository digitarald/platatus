@import "./variables/index.css";
@import "./fonts.css";
@import '../../node_modules/mozilla-tabzilla/css/tabzilla.css';

* {
	box-sizing: border-box;
}
html, body {
	margin: 0;
	padding: 0;
	min-height: 100%;
}


body {
	font-family: $baseFontFamily;
	@extend base-rhythm;
	color: $textColorPrimary;
	background: #fff;
	-webkit-text-size-adjust: 100%;
	display: flex;
	flex-direction: column;
}

a {
  color: $linkBlue;
  text-decoration: none;
  &:hover, &:focus, &:active {
    color: $linkBlue;
    text-decoration: underline;
  }
}

.row {
	display: block;
	@media (min-width: $breakDesktop) {
		display: block;
		justify-content: center;
	}
}
.row-inner {
	min-width: 300px;
	max-width: 1020px;
	margin: 0 auto;
	flex: 1;
	padding: calc($gutterY / 2) $gutterX;
}
header {
	background: $developerBlueVibrant;
}
header .row-inner {
	flex: 1;
	padding: 0 0 $gutterY $gutterX;
}
#tabzilla {
	display: none;
	@media (min-width: $breakTablet) {
		display: block;
	}
}
#title {
	display: flex;
	flex-direction: row;
	padding-top: calc($gutterY / 2);
	@media (min-width: $breakMobileLandscape) {
		padding-top: $gutterY;
	}
}
h1 {
	height: calc($gutterY * 2);
	width: calc($gutterY * 2);
	margin: 0;
	padding: 0;
	text-indent: -9999px;
	background-image: url('images/firefox.svg');
	background-repeat: no-repeat;
	background-size: contain;
	@media (min-width: $breakMobileLandscape) {
		height: calc($gutterY * 3);
		width: calc($gutterY * 3);
	}
}
h2 {
	margin: 0;
	color: #fff;
	margin-left: calc($gutterX);
	font-size: $h3FontSize;
	line-height: calc($gutterY * 2);
	font-weight: 300;
	letter-spacing: -.035em;
	@media (min-width: $breakMobileLandscape) {
		margin-left: calc($gutterX * 2);
		font-size: $h2FontSize;
		line-height: calc($gutterY * 1.5);
		@media (min-width: $breakTablet) {
			margin-left: calc($gutterX * 3);
		}
	}
	small {
		display: none;
		letter-spacing: normal;
		font-style: italic;
		font-weight: normal;
		color: $lightGray;
		font-size: $h4FontSize;
	  line-height: calc($gutterY * 1.5);
		@media (min-width: $breakMobileLandscape) {
			display: block;
		}
	}
}

article {
	background-color: #fff;
}

.search {
	text-align: center;
	font-weight: normal;
	margin: $gutterY 0;
	@media (min-width: $breakMobileLandscape) {
		display: flex;
		align-items: center;
		font-size: $h3FontSize;
		* + * {
			margin-left: $gutterX;
		}
	}
}
.search-input {
	font: inherit;
	font-weight: 300;
	flex: 1;
	width: 100%;
	padding: 0 $gutterX;
	line-height: 1.7em;
}

#features {
	list-style: none;
	margin: calc($gutterY / 2) 0;
	padding: 0;
}

#features.searched {
	display: flex;
	flex-direction: column;
}
#features.searched .feature {
	display: none;
}
#features.searched .feature.match {
	display: block;
}

.feature {
	margin: 0 -$gutterX;
	padding: 0 $gutterX;
	@media (min-width: $breakMobileLandscape) {
		padding: calc($gutterY / 2) $gutterX;
	}
}
.feature:hover, .feature:focus {
	outline: none;
	background-color: $backgroundLightWarm;
}
.feature-header {
	position: relative;
}
.feature-title {
	@extend h5;
	padding-top: 0;
	margin-bottom: 0;
	line-height: calc($gutterY * 2);
	padding-right: $gutterX;
	font-weight: 600;
	@media (min-width: $breakMobileLandscape) {
		font-size: $h3FontSize;
		letter-spacing: -.035em;
		font-weight: 300;
		@media (min-width: $breakDesktopWide) {
			font-size: $h2FontSize;
		}
	}
}

.feature-anchor {
	display: inline-block;
	margin-left: calc(-$gutterX - $gutterX / 2);
	visibility: hidden;
	float: left;
	background-position: center;
	background-repeat: no-repeat;
	width: $gutterX;
	height: calc($gutterY * 2);
	background-image: url('images/anchor.svg');
	opacity: 0.4;
}
.feature:hover .feature-anchor {
	visibility: visible;
}

.feature-meta {
	display: none;
	padding: calc($gutterY / 2) 0 0;
	color: $textColorTertiary;
	@media (min-width: $breakMobileLandscape) {
		display: block;
	}
}
@media (max-width: $breakMobileLandscape) {
	.feature:focus .feature-meta {
		display: block;
	}
}
.feature-summary {
	margin: 0;
	padding-top: calc($gutterY / 2);
}
.feature-links {
	ul {
		list-style: none;
		padding: 0;
		display: flex;
		margin: 0;
		margin-right: calc($gutterX);
		@media (min-width: $breakMobileLandscape) {
			margin-right: 0;
		}
	}
	li {
		margin-right: calc($gutterX);
		&:last-child {
			margin-right: 0;
		}
		overflow: hidden;
		&.link-bug {
			flex: 1;
			text-align: right;
		}
	}
	a {
		color: $linkBlue;
		&:hover, &:focus, &:active {
			color: $linkBlue;
		}
	}
}
.icon {
	display: inline-block;
	background-position: bottom center;
	background-repeat: no-repeat;
	width: $gutterX;
	height: $gutterX;
	background-size: $gutterX;
	margin-right: calc($gutterX / 2);
}
.icon-spec {
	background-image: url('images/html5.png');
	@media (min-resolution: 2dppx) {
		background-image: url('images/html5@2x.png');
	}
}
.icon-mdn {
	background-image: url('images/mdn.png');
	@media (min-resolution: 2dppx) {
		background-image: url('images/mdn@2x.png');
	}
}
.icon-bugzilla {
	background-image: url('images/bugzilla.png');
	@media (min-resolution: 2dppx) {
		background-image: url('images/bugzilla@2x.png');
	}
}
.icon-caniuse {
	background-image: url('images/caniuse.png');
	@media (min-resolution: 2dppx) {
		background-image: url('images/caniuse@2x.png');
	}
}
.icon-samples {
	background-image: url('images/github.png');
	@media (min-resolution: 2dppx) {
		background-image: url('images/github@2x.png');
	}
}

.feature-status {
	position: absolute;
	right: 0;
	top: 0;
}

.feature-status ul {
	list-style: none;
	margin: 0;
	padding: 0;
	display: flex;
	flex-direction: row;
	height: calc($gutterY * 2);
	overflow: hidden;
}

.status {
	list-style: none;
	position: relative;
	margin: 0;
	padding: 0;
	width: calc($gutterY);
	display: flex;
	justify-content: stretch;
	align-items: stretch;
	border: 1px solid transparent;

	color: $textColorSecondary;
	font-weight: 600;
	font-size: $smallFontSize;
	text-transform: uppercase;

	@media (min-width: $breakMobileLandscape) {
		color: #fff;
		font-weight: 600;
		font-size: $fontSize;
		text-shadow: 1px 1px 0 rgba(0, 0, 0, 0.3), 0 0 1px rgba(0, 0, 0, 0.3);
		width: calc($gutterY * 3);
		border: none;
		transition: transform 0.2s ease-out;
		&:first-child {
			border-top-left-radius: 0.2rem;
			border-bottom-left-radius: 0.2rem;
		}
		&:last-child {
			border-top-right-radius: 0.2rem;
			border-bottom-right-radius: 0.2rem;
		}
		&.state-firefox {
			width: calc($gutterY * 6);
		}
		&:not(:first-child) {
			box-shadow: -2px 0 3px rgba(0, 0, 0, 0.2);
		}
		&:nth-child(1) {
			transform: translateX(calc($gutterY * 8));
		}
		&:nth-child(2) {
			transform: translateX(calc($gutterY * 6));
		}
		&:nth-child(3) {
			transform: translateX(calc($gutterY * 4));
		}
		&:nth-child(4) {
			transform: translateX(calc($gutterY * 2));
		}
		@media (min-width: $breakTablet) {
			width: calc($gutterY * 6);
			transition: transform 0.2s ease-in-out;
			&:nth-child(1) {
				transform: translateX(calc($gutterY * 16));
			}
			&:nth-child(2) {
				transform: translateX(calc($gutterY * 12));
			}
			&:nth-child(3) {
				transform: translateX(calc($gutterY * 8));
			}
			&:nth-child(4) {
				transform: translateX(calc($gutterY * 4));
			}

			@media (min-width: $breakDesktop) {
				font-size: $fontSize;
				width: calc($gutterY * 8);
				&.state-firefox {
					width: calc($gutterY * 8);
				}
				&:nth-child(1) {
					transform: translateX(calc($gutterY * 24));
				}
				&:nth-child(2) {
					transform: translateX(calc($gutterY * 18));
				}
				&:nth-child(3) {
					transform: translateX(calc($gutterY * 12));
				}
				&:nth-child(4) {
					transform: translateX(calc($gutterY * 6));
				}
			}
		}
	}
}
@media (min-width: $breakTablet) {
	.status {
		will-change: transform;
	}
	.feature:hover {
		.status {
			transform: translateX(0);
		}
	}
}
.icon-browser {
	position: absolute;
	width: 32px;
	height: 32px;
	top: -8px;
	left: 0;
	transform: translate(2px, calc($gutterY / 2)) scale(0.5);
	transform-origin: left center;
	background-repeat: no-repeat;
	background-position: center;
	background-size: 32px;
	@extend hide-text;
	@media (min-width: $breakMobileLandscape) {
		transform: translate(calc($gutterX / 2), calc($gutterY / 1.5)) scale(0.75);
	}
}
.status-footnote-indicator {
	position: absolute;
	top: 1px;
	left: 14px;
	@media (min-width: $breakMobileLandscape) {
		left: 28px;
	}
}

.state-firefox {
	.icon-browser {
		background-image: url('images/browsers/firefox_64x64.png');
		@media (min-width: $breakMobileLandscape) {
			transform: translate(calc($gutterX / 3), calc($gutterY / 1.5)) scale(1);
		}
	}
	&.state-beta {
		.icon-browser {
			background-image: url('images/browsers/firefox-beta_64x64.png');
		}
	}
	&.state-nightly {
		.icon-browser {
			background-image: url('images/browsers/firefox-nightly_64x64.png');
		}
	}
}
.state-chrome {
	.icon-browser {
		background-image: url('images/browsers/chrome_64x64.png');
	}
}
.state-opera {
	.icon-browser {
		background-image: url('images/browsers/opera_64x64.png');
	}
}
.state-edge {
	.icon-browser {
		background-image: url('images/browsers/edge_64x64.png');
	}
}
.state-webkit {
	.icon-browser {
		background-image: url('images/browsers/safari-technology-preview_64x64.png');
	}
}

$stateUnknown: $lightGray;
$stateNotPlanned: $firefoxOrange;
$stateDeprecated: $firefoxOrange;
$stateConsidering: $marketOrange;
$stateDeveloping: $flameYellow;
$stateShipped: $geckoGreen;

$stateUnknownLight: $lightGray;
$stateNotPlannedLight: $firefoxOrangeTint;
$stateDeprecatedLight: $firefoxOrangeTint;
$stateConsideringLight: $marketOrangeTint;
$stateDevelopingLight: $flameYellowTint;
$stateShippedLight: $geckoGreenTint;

$stateUnknownFocus: color($lightGray lightness(-7%));
$stateNotPlannedFocus: color($firefoxOrange lightness(-7%));
$stateDeprecatedFocus: color($firefoxOrange lightness(-7%));
$stateConsideringFocus: color($marketOrange lightness(-7%));
$stateDevelopingFocus: color($flameYellow lightness(-7%));
$stateShippedFocus: color($geckoGreen lightness(-7%));

$stateShade: -10%;
$stateAlpha: 50%;
$fadeStart: 70%;
$fadeMid: 10%;
$fadeHeight: 25%;

.state-unknown {
	background-color: $stateUnknownLight;
	@media (min-width: $breakMobileLandscape) {
		background-color: $stateUnknown;
		&:hover {
			background-color: $stateUnknownFocus;
		}
	}
}
.state-not-planned {
	background-color: $stateNotPlannedLight;
	@media (min-width: $breakMobileLandscape) {
		background-color: $stateNotPlanned;
		&:hover {
			background-color: $stateNotPlannedFocus;
		}
	}
}
.state-deprecated {
	background-color: $stateDeprecatedLight;
	@media (min-width: $breakMobileLandscape) {
		background-color: $stateDeprecated;
		&:hover {
			background-color: $stateDeprecatedFocus;
		}
	}
}
.state-under-consideration {
	background-color: $stateConsideringLight;
	@media (min-width: $breakMobileLandscape) {
		background-color: $stateConsidering;
		&:hover {
			background-color: $stateDevelopingFocus;
		}
	}
}
.state-in-development {
	background-color: $stateDevelopingLight;
	@media (min-width: $breakMobileLandscape) {
		background-color: $stateDeveloping;
		&:hover {
			background-color: $stateDevelopingFocus;
		}
	}
}
.state-shipped {
	background-color: $stateShippedLight;
	@media (min-width: $breakMobileLandscape) {
		background-color: $stateShipped;
		&:hover {
			background-color: $stateShippedFocus;
		}
	}
}

.status-inner {
	color: inherit;
	flex: 1;
	display: flex;
	justify-content: center;
	align-items: center;
	overflow: hidden;
	padding-right: calc($gutterX / 2);
	&:hover, &:focus, &:active {
    text-decoration: none;
		color: inherit;
  }
	padding-left: calc($gutterY * 2);
	@media (min-width: $breakMobileLandscape) {
		padding-left: calc($gutterX * 3);
	}
}
.status-text {
	@extend truncate-text;
	font-size: $smallFontSize;
	flex: 1;
	&:not(:last-child) {
		padding-right: calc($gutterX / 4);
	}
	@media (min-width: $breakDesktop) {
		font-size: $fontSize;
	}
}
.status-version {
	color: $stateShipped;
	@media (min-width: $breakMobileLandscape) {
		color: inherit;
	}
}

footer {
	background: $nightlyBlue;
}
footer .row-inner {
	padding: $gutterY $gutterX;
	flex: 1;
	display: flex;
	flex-direction: column-reverse;
	@media (min-width: $breakTablet) {
		padding: calc($gutterY / 2) $gutterX;
		flex-direction: row;
	}
}
footer ul {
	list-style: none;
	margin: 0;
	padding: 0;
	text-align: center;
	margin-bottom: $gutterY;
	@media (min-width: $breakTablet) {
		text-align: left;
		flex: 1;
		margin-bottom: 0;
	}
}
footer li {
	display: inline-block;
	margin: 0;
	padding: 0 calc($gutterX * 2) 0 0;
}
footer a {
	white-space: nowrap;
}
footer p {
	color: $textColorLight;
	margin: 0;
	@media (min-width: $breakTablet) {
		padding-right: $gutterX;
		flex: 1;
	}
}
